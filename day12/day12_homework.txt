
1. 实现一个队列的类模板
     
2. 实现一个模板形式的单例类，要求对于任意类型的类经过Singleton的处理之后，
  　都能获取一个单例对象，并且可以传递任意参数
     
     class Point;
     class Computer;
     
     Point pt(1, 2);
     Point pt2(3, 4);
     
     Computer com("Mac", 8888);
     
     
     int main(void)
     {
        Computer * p1 = Singleton<Computer>::getInstance("Xiaomi", 6666);
        Computer * p2 = Singleton<Computer>::getInstance("Xiaomi", 6666);
        
        Point　* p3 = Singleton<Point>::getInstance(1, 2);
        Point　* p4 = Singleton<Point>::getInstance(1, 2);
        
        return 0;
     } 
     
3. 实现log4cpp的封装，使其可以像printf一样使用，测试用例如下:
	
	void test() {
		int number = 100;
		const char * pstr = "hello, log4cpp";
		LogInfo("this is an info message. number = %d, str = %s\n", number, pstr);
	}
	
	
4. STL是由哪些组件构成的？它们各自具备什么样的特点？

5. 序列式容器都有哪些异同？